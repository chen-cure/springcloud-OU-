
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;



    sendfile        on;

    keepalive_timeout  65;

	# 所配置的所有的内容表示nginx作为http服务器代理运行的所有逻辑
	server{
		#每一个server就代表一个虚拟服务器,接收http请求
		# 每一个server代理逻辑不能一样
		# 请求来到nginx中,经过server以后决定去向哪一台真正的server进行处理请求
		listen 80;
		server_name www.cc.com;
		location / {
			#proxy_pass http://localhost:8091;
			# index  index.html index.htm;
			root E:/Nginx/nginx-1.21.6/static;
			index index.html;
		}
		# 动态资源
		location =/user/query/point{
			# proxy_pass http://127.0.0.1:8091/user/query/point;
			proxy_pass http://127.0.0.1:8088/zuul-point/user/query/point;
		}
		location =/order/pay{
			# proxy_pass http://127.0.0.1:8091/order/pay;
			proxy_pass http://127.0.0.1:8088/zuul-pay/order/pay;
		}
		
	}
	
    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
